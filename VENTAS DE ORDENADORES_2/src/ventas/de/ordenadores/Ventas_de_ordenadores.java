/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventas.de.ordenadores;

import java.awt.event.KeyEvent;
import java.io.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author alumno
 */
public class Ventas_de_ordenadores extends javax.swing.JFrame {

    /**
     * Creates new form Ventas_de_ordenadores
     */
    public Ventas_de_ordenadores() {
        initComponents();
        jTextFieldNomClient.grabFocus();
    }
    DefaultListModel modelo = new DefaultListModel();
    Contenedor_datos datos = new Contenedor_datos();
    ArrayList <ButtonModel> lista = new ArrayList<>();
    ArrayList <Boolean> listachk = new ArrayList<>();
    ArrayList <JCheckBox> listachkbut = new ArrayList<>();
    int posicion = 0;
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupProc = new javax.swing.ButtonGroup();
        buttonGroupMem = new javax.swing.ButtonGroup();
        buttonGroupMon = new javax.swing.ButtonGroup();
        buttonGroupDD = new javax.swing.ButtonGroup();
        jLabelNomClient = new javax.swing.JLabel();
        jTextFieldNomClient = new javax.swing.JTextField();
        jLabelLoc = new javax.swing.JLabel();
        jComboBoxLoc = new javax.swing.JComboBox();
        jLabelListClient = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListListClient = new javax.swing.JList();
        jLabelProc = new javax.swing.JLabel();
        jLabelMem = new javax.swing.JLabel();
        jLabelMon = new javax.swing.JLabel();
        jLabelDD = new javax.swing.JLabel();
        jLabelOpt = new javax.swing.JLabel();
        jRadioButtonProc1 = new javax.swing.JRadioButton();
        jRadioButtonProc2 = new javax.swing.JRadioButton();
        jRadioButtonProc3 = new javax.swing.JRadioButton();
        jRadioButtonProc4 = new javax.swing.JRadioButton();
        jRadioButtonMem1 = new javax.swing.JRadioButton();
        jRadioButtonMem2 = new javax.swing.JRadioButton();
        jRadioButtonMem3 = new javax.swing.JRadioButton();
        jRadioButtonMem4 = new javax.swing.JRadioButton();
        jRadioButtonMon1 = new javax.swing.JRadioButton();
        jRadioButtonMon2 = new javax.swing.JRadioButton();
        jRadioButtonMon3 = new javax.swing.JRadioButton();
        jRadioButtonMon4 = new javax.swing.JRadioButton();
        jRadioButtonDD1 = new javax.swing.JRadioButton();
        jRadioButtonDD2 = new javax.swing.JRadioButton();
        jRadioButtonDD3 = new javax.swing.JRadioButton();
        jRadioButtonDD4 = new javax.swing.JRadioButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jButtonAnyadir = new javax.swing.JButton();
        jButtonBuscar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jButtonMostrar = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ventas de ordenadores");
        setResizable(false);

        jLabelNomClient.setText("Nombre de cliente");

        jTextFieldNomClient.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNomClientKeyPressed(evt);
            }
        });

        jLabelLoc.setText("Localidad");

        jComboBoxLoc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Villalba", "Alpedrete", "Galapagar", "Moralzarzal" }));
        jComboBoxLoc.setToolTipText("");
        jComboBoxLoc.setEnabled(false);

        jLabelListClient.setText("Lista de Clientes");

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jListListClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListListClientMouseClicked(evt);
            }
        });
        jListListClient.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jListListClientKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jListListClient);

        jLabelProc.setText("Procesador");

        jLabelMem.setText("Memoria");

        jLabelMon.setText("Monitor");

        jLabelDD.setText("Disco Duro");

        jLabelOpt.setText("Opciones");

        buttonGroupProc.add(jRadioButtonProc1);
        jRadioButtonProc1.setText("i3");
        jRadioButtonProc1.setEnabled(false);

        buttonGroupProc.add(jRadioButtonProc2);
        jRadioButtonProc2.setSelected(true);
        jRadioButtonProc2.setText("i5");
        jRadioButtonProc2.setEnabled(false);

        buttonGroupProc.add(jRadioButtonProc3);
        jRadioButtonProc3.setText("i7");
        jRadioButtonProc3.setEnabled(false);

        buttonGroupProc.add(jRadioButtonProc4);
        jRadioButtonProc4.setText("amd");
        jRadioButtonProc4.setEnabled(false);

        buttonGroupMem.add(jRadioButtonMem1);
        jRadioButtonMem1.setText("2GB");
        jRadioButtonMem1.setEnabled(false);

        buttonGroupMem.add(jRadioButtonMem2);
        jRadioButtonMem2.setSelected(true);
        jRadioButtonMem2.setText("4GB");
        jRadioButtonMem2.setEnabled(false);

        buttonGroupMem.add(jRadioButtonMem3);
        jRadioButtonMem3.setText("8GB");
        jRadioButtonMem3.setEnabled(false);

        buttonGroupMem.add(jRadioButtonMem4);
        jRadioButtonMem4.setText("16GB");
        jRadioButtonMem4.setEnabled(false);

        buttonGroupMon.add(jRadioButtonMon1);
        jRadioButtonMon1.setText("18\"");
        jRadioButtonMon1.setEnabled(false);

        buttonGroupMon.add(jRadioButtonMon2);
        jRadioButtonMon2.setSelected(true);
        jRadioButtonMon2.setText("24\"");
        jRadioButtonMon2.setEnabled(false);

        buttonGroupMon.add(jRadioButtonMon3);
        jRadioButtonMon3.setText("30\"");
        jRadioButtonMon3.setEnabled(false);

        buttonGroupMon.add(jRadioButtonMon4);
        jRadioButtonMon4.setText("2x24\"");
        jRadioButtonMon4.setEnabled(false);

        buttonGroupDD.add(jRadioButtonDD1);
        jRadioButtonDD1.setText("500GB");
        jRadioButtonDD1.setEnabled(false);

        buttonGroupDD.add(jRadioButtonDD2);
        jRadioButtonDD2.setSelected(true);
        jRadioButtonDD2.setText("1TB");
        jRadioButtonDD2.setEnabled(false);

        buttonGroupDD.add(jRadioButtonDD3);
        jRadioButtonDD3.setText("200GB SSD");
        jRadioButtonDD3.setEnabled(false);

        buttonGroupDD.add(jRadioButtonDD4);
        jRadioButtonDD4.setText("500GB SSD");
        jRadioButtonDD4.setEnabled(false);

        jCheckBox1.setText("Teclado mecánico");
        jCheckBox1.setEnabled(false);

        jCheckBox2.setText("Ratón gamer");
        jCheckBox2.setEnabled(false);

        jCheckBox3.setText("Tarjeta WiFi");
        jCheckBox3.setEnabled(false);

        jCheckBox4.setText("Arranque dual Windows");
        jCheckBox4.setEnabled(false);

        jButtonAnyadir.setMnemonic('a');
        jButtonAnyadir.setText("Añadir");
        jButtonAnyadir.setEnabled(false);
        jButtonAnyadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnyadirActionPerformed(evt);
            }
        });

        jButtonBuscar.setMnemonic('b');
        jButtonBuscar.setText("Buscar");
        jButtonBuscar.setEnabled(false);
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jButtonEliminar.setMnemonic('e');
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.setEnabled(false);
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonCancelar.setMnemonic('c');
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonSalir.setMnemonic('s');
        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jButtonMostrar.setMnemonic('m');
        jButtonMostrar.setText("Mostrar");
        jButtonMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMostrarActionPerformed(evt);
            }
        });

        jButtonGuardar.setMnemonic('g');
        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAnyadir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonEliminar)
                        .addGap(63, 63, 63)
                        .addComponent(jButtonMostrar)
                        .addGap(62, 62, 62)
                        .addComponent(jButtonGuardar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNomClient)
                            .addComponent(jLabelLoc))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldNomClient)
                            .addComponent(jComboBoxLoc, 0, 133, Short.MAX_VALUE))
                        .addGap(46, 46, 46)
                        .addComponent(jLabelListClient)
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelProc)
                            .addComponent(jRadioButtonProc3)
                            .addComponent(jRadioButtonProc2)
                            .addComponent(jRadioButtonProc1)
                            .addComponent(jRadioButtonProc4))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelMem)
                            .addComponent(jRadioButtonMem1)
                            .addComponent(jRadioButtonMem2)
                            .addComponent(jRadioButtonMem3)
                            .addComponent(jRadioButtonMem4))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelMon)
                            .addComponent(jRadioButtonMon1)
                            .addComponent(jRadioButtonMon2)
                            .addComponent(jRadioButtonMon3)
                            .addComponent(jRadioButtonMon4))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonDD1)
                            .addComponent(jRadioButtonDD2)
                            .addComponent(jRadioButtonDD3)
                            .addComponent(jRadioButtonDD4)
                            .addComponent(jLabelDD))
                        .addGap(191, 191, 191)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox4)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jButtonSalir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonCancelar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelOpt)
                                    .addComponent(jCheckBox1)
                                    .addComponent(jCheckBox2)
                                    .addComponent(jCheckBox3))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNomClient)
                            .addComponent(jTextFieldNomClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelListClient))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelLoc)
                            .addComponent(jComboBoxLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelOpt)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelProc)
                            .addComponent(jLabelMem)
                            .addComponent(jLabelMon)
                            .addComponent(jLabelDD))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonMem1)
                            .addComponent(jRadioButtonProc1)
                            .addComponent(jRadioButtonMon1)
                            .addComponent(jRadioButtonDD1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonMem2)
                            .addComponent(jRadioButtonProc2)
                            .addComponent(jRadioButtonMon2)
                            .addComponent(jRadioButtonDD2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonMem3)
                            .addComponent(jRadioButtonProc3)
                            .addComponent(jRadioButtonMon3)
                            .addComponent(jRadioButtonDD3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonMem4)
                            .addComponent(jRadioButtonProc4)
                            .addComponent(jRadioButtonMon4)
                            .addComponent(jRadioButtonDD4))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonAnyadir)
                            .addComponent(jButtonBuscar)
                            .addComponent(jButtonEliminar)
                            .addComponent(jButtonMostrar))
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSalir)
                            .addComponent(jButtonGuardar))
                        .addContainerGap(30, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        //Salimos de la app
        if(!modelo.isEmpty()){
           int i = JOptionPane.showConfirmDialog(this,"Hay datos sin guardar, ¿Quiere guardar antes de salir?","Salir",JOptionPane.YES_NO_CANCEL_OPTION);
           if(i == JOptionPane.YES_OPTION){
               guardar();
               System.exit(0);
           }else if(i == JOptionPane.NO_OPTION){
               System.exit(0);
           }else if(i == JOptionPane.CANCEL_OPTION){
               
           }
        }else{
            System.exit(0);
        }
        
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jTextFieldNomClientKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomClientKeyPressed
        // Al pulsar enter comprueba el campo y activa botones en caso de match
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            String texto = jTextFieldNomClient.getText();
           if(texto.matches("[A-z.]{3,}")){
               activar(true);
               reinicio();
               jComboBoxLoc.grabFocus();
               jButtonEliminar.setEnabled(false);
           }
        }
    }//GEN-LAST:event_jTextFieldNomClientKeyPressed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        //Desactivamos botones y pasamos el foco a "nombre de cliente" vaciando el campo
        activar(false);
        jTextFieldNomClient.setText("");
        jTextFieldNomClient.grabFocus();
        jListListClient.setEnabled(true);
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonAnyadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnyadirActionPerformed
        // TODO add your handling code here:
        modelo.addElement(jTextFieldNomClient.getText());
        jListListClient.setModel(modelo);
        datos.anyadir((String)jComboBoxLoc.getSelectedItem(),buttonGroupProc.getSelection(),buttonGroupMem.getSelection(),
                buttonGroupMon.getSelection(),buttonGroupDD.getSelection(),jCheckBox1.isSelected(),
                jCheckBox2.isSelected(),jCheckBox3.isSelected(),jCheckBox4.isSelected());
        activar(false);
        jListListClient.setEnabled(true);
        jTextFieldNomClient.setText(null);
        jTextFieldNomClient.grabFocus();
        
    }//GEN-LAST:event_jButtonAnyadirActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
       String nombre = jTextFieldNomClient.getText();
       int contador = 0;
       for(int i=0;i<modelo.size();i++){
         if(modelo.elementAt(i).equals(nombre)){  
             if((contador>0&&JOptionPane.showConfirmDialog(this, "Este cliente tiene más de una compra, ¿Quieres ver la siguiente?","sdf",JOptionPane.YES_NO_OPTION)==0)||contador<1){
               lista.addAll(datos.recuperar(i));
               listachk.addAll(datos.recuperarchk(i));
               listachkbut.addAll(chk());
               jComboBoxLoc.setSelectedItem(datos.recuperarloc(i));
        
                for(int o=0;o<lista.size();o++){
                    lista.get(o).setSelected(true);
                    listachkbut.get(o).setSelected(listachk.get(o));
            
                }
                   lista.clear();
                   listachk.clear();
                   listachkbut.clear();
             contador++;
           }
         }
        }
       if(contador==0){
           JOptionPane.showMessageDialog(this,"Ninguna coincidencia");
       }
       jTextFieldNomClient.grabFocus();
       activar(false);
       jListListClient.setEnabled(true);
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
      if(!modelo.isEmpty()&&JOptionPane.showConfirmDialog(this, "¿Quieres eliminar este elemento?","Eliminar",JOptionPane.YES_NO_OPTION)==0){
       modelo.removeElementAt(posicion);
       jListListClient.setModel(modelo);
       datos.eliminar(posicion);
       jTextFieldNomClient.grabFocus();
       jButtonEliminar.setEnabled(false);
       JOptionPane.showMessageDialog(this,"El elemento se ha eliminado correctamente");
       }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jListListClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListListClientMouseClicked
        // TODO add your handling code here:
       if(!modelo.isEmpty()){  
            posicion = jListListClient.getSelectedIndex();
            lista.addAll(datos.recuperar(posicion));
            listachk.addAll(datos.recuperarchk(posicion));
            listachkbut.addAll(chk());
            jComboBoxLoc.setSelectedItem(datos.recuperarloc(posicion));

            for(int i=0;i<lista.size();i++){
                lista.get(i).setSelected(true);
                listachkbut.get(i).setSelected(listachk.get(i));

            }
            activar(false);
            jListListClient.setEnabled(true);
            jButtonEliminar.setEnabled(true);
            lista.clear();
            listachk.clear();
            listachkbut.clear();
       }
        
    }//GEN-LAST:event_jListListClientMouseClicked

    private void jListListClientKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jListListClientKeyReleased
       try{
        if(!modelo.isEmpty()){  
            posicion = jListListClient.getSelectedIndex();
            lista.addAll(datos.recuperar(posicion));
            listachk.addAll(datos.recuperarchk(posicion));
            listachkbut.addAll(chk());
            jComboBoxLoc.setSelectedItem(datos.recuperarloc(posicion));

            for(int i=0;i<lista.size();i++){
                lista.get(i).setSelected(true);
                listachkbut.get(i).setSelected(listachk.get(i));

            }
            activar(false);
            jListListClient.setEnabled(true);
            jButtonEliminar.setEnabled(true);
            lista.clear();
            listachk.clear();
            listachkbut.clear();
            jListListClient.grabFocus();
       }
       }catch(Exception e){
       }
        
    }//GEN-LAST:event_jListListClientKeyReleased

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        if(!modelo.isEmpty()){
            guardar();
            modelo.clear();
            datos.limpiar();
        }else{
            JOptionPane.showMessageDialog(this, "No hay nada que guardar, está vacío");
        }
        jTextFieldNomClient.grabFocus();
        
    }//GEN-LAST:event_jButtonGuardarActionPerformed
    private void guardar(){
         try {
                // TODO add your handling code here:
                FileOutputStream fos = new FileOutputStream("datos",true);
                DataOutputStream dos = new DataOutputStream(fos);
                listachkbut.addAll(chk()); 
                for(int i = 0; i<modelo.size();i++){
                    dos.writeUTF(modelo.get(i).toString());
                    dos.writeUTF(datos.recuperarloc(i));
                    lista.addAll(datos.recuperar(i));
                    listachk.addAll(datos.recuperarchk(i));  
                    for(int o = 0; o<lista.size();o++){
                        if(lista.get(i)==jRadioButtonProc1.getModel()||
                                lista.get(i)==jRadioButtonMon1.getModel()||
                                lista.get(i)==jRadioButtonMem1.getModel()||
                                lista.get(i)==jRadioButtonDD1.getModel()){
                            dos.writeInt(1);
                        }else if(lista.get(i)==jRadioButtonProc2.getModel()||
                                lista.get(i)==jRadioButtonMon2.getModel()||
                                lista.get(i)==jRadioButtonMem2.getModel()||
                                lista.get(i)==jRadioButtonDD2.getModel()){
                            dos.writeInt(2);
                        }else if(lista.get(i)==jRadioButtonProc3.getModel()||
                                lista.get(i)==jRadioButtonMon3.getModel()||
                                lista.get(i)==jRadioButtonMem3.getModel()||
                                lista.get(i)==jRadioButtonDD3.getModel()){
                            dos.writeInt(3);
                        }else if(lista.get(i)==jRadioButtonProc4.getModel()||
                                lista.get(i)==jRadioButtonMon4.getModel()||
                                lista.get(i)==jRadioButtonMem4.getModel()||
                                lista.get(i)==jRadioButtonDD4.getModel()){
                            dos.writeInt(4);
                        }

                    }
                    lista.clear();
                    for(int z = 0;z<listachk.size();z++){
                           dos.writeBoolean(listachk.get(z));
                    }
                    listachk.clear();
                }
                dos.close();
                fos.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Ventas_de_ordenadores.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Ventas_de_ordenadores.class.getName()).log(Level.SEVERE, null, ex);
            }
         listachkbut.clear();
    }
    private void jButtonMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMostrarActionPerformed
        try {
            // TODO add your handling code here:
            DataInputStream dis = new DataInputStream(new FileInputStream("datos"));
            listachkbut.addAll(chk());
            ArrayList<JRadioButton>rblistproc = new ArrayList<>();
            rblistproc.add( jRadioButtonProc1);
            rblistproc.add( jRadioButtonProc2);
            rblistproc.add( jRadioButtonProc3);
            rblistproc.add( jRadioButtonProc4);
            ArrayList<JRadioButton>rblistmem = new ArrayList<>();
            rblistmem.add( jRadioButtonMem1);
            rblistmem.add( jRadioButtonMem2);
            rblistmem.add( jRadioButtonMem3);
            rblistmem.add( jRadioButtonMem4);
            ArrayList<JRadioButton>rblistmon = new ArrayList<>();
            rblistmon.add( jRadioButtonMon1);
            rblistmon.add( jRadioButtonMon2);
            rblistmon.add( jRadioButtonMon3);
            rblistmon.add( jRadioButtonMon4);
            ArrayList<JRadioButton>rblistDD = new ArrayList<>();
            rblistDD.add(jRadioButtonDD1);
            rblistDD.add(jRadioButtonDD2);
            rblistDD.add(jRadioButtonDD3);
            rblistDD.add(jRadioButtonDD4);
            
            int z;
           do{
//               System.out.println(dis.readUTF());
//               System.out.println(dis.readUTF());
//               System.out.println(dis.readInt());
//               System.out.println(dis.readInt());
//               System.out.println(dis.readInt());
//               System.out.println(dis.readInt());
//               System.out.println(dis.readBoolean());
//               System.out.println(dis.readBoolean());
//               System.out.println(dis.readBoolean());
//               System.out.println(dis.readBoolean());
                jTextFieldNomClient.setText(dis.readUTF());
                jComboBoxLoc.setSelectedItem(dis.readUTF());
                
                for(int i=0;i<4;i++){
                    z = dis.readInt();
                            switch (i){
                                case 0: rblistproc.get(z-1).setSelected(true);break;
                                case 1: rblistmem.get(z-1).setSelected(true);break;
                                case 2: rblistmon.get(z-1).setSelected(true);break;
                                case 3: rblistDD.get(z-1).setSelected(true);break;
                            }             
                }
                
                for(int i= 0;i<4;i++){
                   listachkbut.get(i).setSelected(dis.readBoolean());
               }
            } while(JOptionPane.showConfirmDialog(this, "¿Quieres ver el siguiente?","Datos guardados",JOptionPane.YES_NO_OPTION)==0);
        }catch (EOFException e){
           JOptionPane.showMessageDialog(this, "OUPS, no hay más datos");
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "El fichero no existe");
        } catch (IOException ex) {
            Logger.getLogger(Ventas_de_ordenadores.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextFieldNomClient.grabFocus();
        listachkbut.clear();
    }//GEN-LAST:event_jButtonMostrarActionPerformed
  
    //Devuelve un array de radio buttons, solo es llamada desde activar
    private ArrayList<JRadioButton> arrays(){
       ArrayList<JRadioButton>lista = new ArrayList<>();
       lista.add(jRadioButtonProc1);
       lista.add(jRadioButtonProc2);
       lista.add(jRadioButtonProc3);
       lista.add(jRadioButtonProc4);
       lista.add(jRadioButtonMem1);
       lista.add(jRadioButtonMem2);
       lista.add(jRadioButtonMem3);
       lista.add(jRadioButtonMem4);
       lista.add(jRadioButtonMon1);
       lista.add(jRadioButtonMon2);
       lista.add(jRadioButtonMon3);
       lista.add(jRadioButtonMon4);
       lista.add(jRadioButtonDD1);
       lista.add(jRadioButtonDD2);
       lista.add(jRadioButtonDD3);
       lista.add(jRadioButtonDD4);
        return lista;
    }
    //Esta clase devuelve un array de jcheckbox, solo es llamada desde activar
    private ArrayList<JCheckBox> chk(){
       ArrayList<JCheckBox>lista = new ArrayList<>();
       lista.add(jCheckBox1);
       lista.add(jCheckBox2);
       lista.add(jCheckBox3);
       lista.add(jCheckBox4);
       return lista;
    }
    //Aquí activamos o desactivamos los elementos del formulario
    private void activar(boolean b){
        ArrayList<JRadioButton>lista=arrays();//Array para radiobuttons
        ArrayList<JCheckBox>listachk=chk();//Array para checkbox
        //Recorremos el array de radiobuttons activando/desactivando
        for(int i=0;i<lista.size();i++){
            lista.get(i).setEnabled(b);
        }
        //Lo mismo para checkbox
        for(int i=0;i<listachk.size();i++){
            listachk.get(i).setEnabled(b);
        }
        //Activamos/desactivamos el resto de elementos
         jComboBoxLoc.setEnabled(b);
         jListListClient.setEnabled(b);
         jButtonAnyadir.setEnabled(b);
         jButtonBuscar.setEnabled(b);
         jButtonEliminar.setEnabled(b);
         jTextFieldNomClient.setEnabled(!b);

    }
    private void reinicio(){
          jRadioButtonDD2.setSelected(true);
          jRadioButtonProc2.setSelected(true);
          jRadioButtonMon2.setSelected(true);
          jRadioButtonMem2.setSelected(true);
          jCheckBox1.setSelected(false);
          jCheckBox2.setSelected(false);
          jCheckBox3.setSelected(false);
          jCheckBox4.setSelected(false);
          jComboBoxLoc.setSelectedIndex(0);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventas_de_ordenadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventas_de_ordenadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventas_de_ordenadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventas_de_ordenadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventas_de_ordenadores().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupDD;
    private javax.swing.ButtonGroup buttonGroupMem;
    private javax.swing.ButtonGroup buttonGroupMon;
    private javax.swing.ButtonGroup buttonGroupProc;
    private javax.swing.JButton jButtonAnyadir;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonMostrar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JComboBox jComboBoxLoc;
    private javax.swing.JLabel jLabelDD;
    private javax.swing.JLabel jLabelListClient;
    private javax.swing.JLabel jLabelLoc;
    private javax.swing.JLabel jLabelMem;
    private javax.swing.JLabel jLabelMon;
    private javax.swing.JLabel jLabelNomClient;
    private javax.swing.JLabel jLabelOpt;
    private javax.swing.JLabel jLabelProc;
    private javax.swing.JList jListListClient;
    private javax.swing.JRadioButton jRadioButtonDD1;
    private javax.swing.JRadioButton jRadioButtonDD2;
    private javax.swing.JRadioButton jRadioButtonDD3;
    private javax.swing.JRadioButton jRadioButtonDD4;
    private javax.swing.JRadioButton jRadioButtonMem1;
    private javax.swing.JRadioButton jRadioButtonMem2;
    private javax.swing.JRadioButton jRadioButtonMem3;
    private javax.swing.JRadioButton jRadioButtonMem4;
    private javax.swing.JRadioButton jRadioButtonMon1;
    private javax.swing.JRadioButton jRadioButtonMon2;
    private javax.swing.JRadioButton jRadioButtonMon3;
    private javax.swing.JRadioButton jRadioButtonMon4;
    private javax.swing.JRadioButton jRadioButtonProc1;
    private javax.swing.JRadioButton jRadioButtonProc2;
    private javax.swing.JRadioButton jRadioButtonProc3;
    private javax.swing.JRadioButton jRadioButtonProc4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldNomClient;
    // End of variables declaration//GEN-END:variables
}
